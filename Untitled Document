---
title: "股票时段-宏观经济指标分析"
# author: "yuiant"
output: html_document
runtime: shiny
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,message = FALSE,warning = FALSE)
library(plyr)
library(dplyr)
library(tidyr)
library(rjson)
library(plotly)
library(DT)
library(networkD3)


########## Helper.R
namenest <- function(root){
  children <- root$children
  if(!is.null(children)){
    sp <- split(children,f = children[,1])
    names(sp) <- NULL
    root$children <- lapply(sp,FUN = function(mysp){
      newchild <- NULL
      if(length(mysp) > 1){
        newchild <- data.frame(mysp[,-1],stringsAsFactors = F)
      }
      mychildren <- list(name = unique(mysp[,1]),children = newchild)
      namenest(mychildren)
    })
  }
  return(root)
}




###########








namejson <- fromJSON(file = "id2token.json")


##initialize
mc_ind <- read.csv("macro_indicator_new.csv",fileEncoding = "utf-8")
col2rid <- read.csv("col2rid.csv",header = F)

### plot na status of the table
xa <- rep(1:130,809)
ya <- sort(rep(1:809,130))
hm <- data.frame(xa,ya)
hm$status <- as.integer(is.na(apply(hm,1,FUN = function(x){is.na(mc_ind[810-x[2],2+x[1]])})))
txt <- paste(mc_ind$date[810-hm$ya],unlist(namejson)[hm$xa],sep = ":")
hm$txt <- txt

indexcount <- c(1,6,7,8,12,4,12,11,16,14,31,3,2,3)
ind0 <- c(1,(cumsum(indexcount)+1)[-length(indexcount)])
ind1 <- cumsum(indexcount)
inds <- cbind(ind0,ind1)
inds <- inds+2

## subset 
mc_ind$date <-as.character(mc_ind$date)
submc <- filter(mc_ind,date >= "1992-01-01" & date <= "2016-11-01")
submc$date <- as.POSIXct(submc$date)

dname <- do.call(rbind,strsplit(unlist(namejson),split = "-"))

d2nameindex <- unique(paste(dname[,1],dname[,2],sep = "-"))
```

## 1. 概览
### 1.1 股票时段划分（上证）

```{r echo= FALSE}
s1 <- read.csv("000001.SS.csv")
s1$Date <- as.character(s1$Date)
spm <- read.csv("stock_period_modified.csv",sep = "#",na.strings = "NA")
names(spm)[1] <- "Date"
spm$Date <- as.character(spm$Date)

spm1 <- plyr::join(x = s1,y = spm,by = "Date")
spm1$Date <- as.POSIXct(spm1$Date)
spm1 <- spm1[(spm1$period0 > -1)&!is.na(spm1$period1),]

spm1$Adj.Close <- as.numeric(as.character(spm1$Adj.Close))

checkboxInput(inputId = "checkbox0",label = "震荡期")


selectp0 <- reactive({
  if(input$checkbox0 == F){
    p <- plot_ly(data = spm1,x =~Date,y = ~Adj.Close,color =c("Bear","Bull")[spm1$period1+1],colors = c("green","red"),text = ~remark)
  }
  else{
   p <- plot_ly(data = spm1,x =~Date,y = ~Adj.Close,color =c("Bear","Bull","unknown")[spm1$period0+1],colors = c("green","red","yellow"),text = ~remark)
  }
})

renderPlotly({selectp0()})

```



### 1.2 宏观经济指标概览
```{r echo= FALSE,warning=FALSE,message=FALSE}

namedf <- data.frame(namevector = unlist(namejson),stringsAsFactors = FALSE)
namedf1 <- tidyr::separate(namedf,namevector,paste("c",1:3,sep = ""),sep = "-")
myroot <- list(name = "宏观经济指标",children = namedf1)

diagonalNetwork(namenest(myroot),width = 1000,height = 2500,opacity = 0.9,fontSize = 16)

```


## 2. 特征工程
### 2.1 同类指标时序图
#### 同一类内部的多数指标呈高度正相关

```{r eruptions, echo=FALSE}

selectInput("select_inds2", label = "选择指标类别",
              choices = d2nameindex, selected = 1,width = "40%")

selectp1 <- reactive({
  selectind <- which(d2nameindex == input$select_inds2,arr.ind = T)
selectmcind <- submc[,c(1:2,inds[selectind,1]:inds[selectind,2])]
p <- plot_ly(data = selectmcind,x = ~date)
for(i in 3:dim(selectmcind)[2]){
 p <- p %>% add_trace(y = selectmcind[,i],name = dname[(inds-2)[selectind,1]:(inds-2)[selectind,2],3][i-2])
}
p
})

renderPlotly({selectp1()})

```

#### Q&A
##### CPI
###### 为何1993-1994年CPI那么高？
- 92年邓小平南巡讲话，掀起投资热。银行监管力度欠缺，坏账率高。导致市场积累大量货币，引起高通胀。海南房产泡沫，苏三山事件等。
- 朱镕基要把钱收回来，存款利率和贷款利率一度拉高。
------------
###### 为何cpi有周期性,从1999年开始大概3年为一个周期?
- unknown

#####  国家财政-收支
- 财政收入结构：税收收入、国有资产收益、国债收入、收费收入、其他收入
- 财政支出结构：结构略

###### 财政支出随着财政收入增长？
- 社会发展使然。支出和收入两者互为积极作用。
- 
##### 税收




### 2.2 不同类指标的相关性（绝对值）达90%以上的项
```{r echo= FALSE}
coln <- dim(submc)[2]-2
cm0 <- combn(coln,2)
cm1 <- do.call(cbind,apply((inds-2),1,FUN = function(x){
  if(x[1]<x[2]){
    combn(x[1]:x[2],2)
  }
  else{
    NULL
  }
  }))
cm <- t(as.matrix(dplyr::setdiff(as.data.frame(t(cm0)),as.data.frame(t(cm1)))))
corvalue <- apply((cm+2),2,FUN = function(x){cor(submc[,x[1]],submc[,x[2]],use = "pairwise.complete.obs")})
#myname <- paste(names(submc)[3:132],unlist(namejson),sep = ":")
myname <- unlist(namejson)
cname <- apply(cm,2,FUN = function(x){paste(myname[x[1]],myname[x[2]],sep = "vs")})
cdf <- data.frame(cor = corvalue, name = cname,id1 = cm[1,],id2 = cm[2,])


cdf90 <- filter(cdf,abs(cor) >= 0.9)
cdf90 <- cdf90[order(cdf90$cor,decreasing = T),]

Normalize <- function(x,b){
  if(b == TRUE){
    (x-min(x))/(max(x)-min(x))
  }
  else{
    x
  }
}



## ui plot
cdf905 <- cdf90
cdf905$cor <- round(cdf905$cor,5)
DT::datatable(cdf905[,1:2],rownames = F)



  selectInput("selectvsind", label = "选择指标",
              choices = cdf90$name, selected = 1,width = "100%")


selectp2 <- reactive({
  selectind1 <- which(cdf905$name == input$selectvsind,arr.ind = T)
  tracename <- unlist(strsplit(input$selectvsind,split = "vs"))
  p <- plot_ly(data = submc,x = ~date) %>% 
    add_trace(y = submc[,cdf905$id1[selectind1]+2],name = tracename[1]) %>%
    add_trace(y = submc[,cdf905$id2[selectind1]+2],name = tracename[2]) %>%
    layout(title = paste("cor_value",cdf905$cor[selectind1],sep = ":"))
})


renderPlotly(selectp2())

```



### 2.3 指标确定
- 剔除冗余指标(人工判定)
- 剔除缺失值太多（>80%）

#### 剩余指标概览：

```{r echo=FALSE}
namejson1 <- fromJSON(file = "id2token (copy).json")
namejsonlag <- fromJSON(file = "lag.json")
# mf_ind <- read.csv("macro_indicator_filled1.csv",check.names = F)
# mfname <- names(mf_ind)[-1]
# mfind <- which(mfname %in% names(unlist(namejson1)))
#newnameIndex <- which(names(unlist(namejson)) %in% mfname[mfind],arr.ind = T)
newnameIndex <- which(unlist(namejson) %in% unlist(namejson1))
lagIndex <- which(unlist(namejson) %in% unlist(namejsonlag))
notlagIndex <- setdiff(newnameIndex,lagIndex)
myroot <- list(name = "宏观经济指标",children = namedf1[newnameIndex,])

diagonalNetwork(namenest(myroot),width = 1000,height = 2000,opacity = 0.9,fontSize = 16)
```

## 3. PCA主成分分析
### 3.1 图表数据
```{r echo= FALSE}
pcachoise <- c("非lag指标","lag指标","全部指标")
pcalist <- list(notlagIndex,lagIndex,newnameIndex)

inputPanel(
  selectInput(inputId = "selectpca",label = "选择PCA的特征集",choices = pcachoise,selected = 1),
  sliderInput(inputId = "sliderpca",label = "累计方差贡献率超过(%)",min = 80,max = 100,value = 100)
)

selectpca <- reactive({
  res <- list()
  myindex <- pcalist[[which(pcachoise == input$selectpca,arr.ind = T)]]
  pcadata <- submc[,myindex+2]
  cormat <- cor(pcadata,use = "pairwise.complete.obs")
  e <- eigen(cormat)
  evalue <- e$values
  evalue[which(evalue < 0)] <- min(evalue[which(evalue >= 0)])
  e$values <- evalue
  
  spercent <- input$sliderpca
  
  varcumsum <- cumsum(e$values)/sum(e$values)
  minpcax <- min(which(varcumsum >= spercent/100,arr.ind = T))
  
  myname <- rep(namedf[myindex,],minpcax)
  mycoe <- c(e$vectors[,1:minpcax])
  myind <- sort(rep(1:minpcax,length(myindex)))
  myind <- paste("Com",myind,sep = "")
  mydf <- data.frame(prin_com = myind,name = myname,coe = mycoe)
  myroot <- list(name = "prin.com",children = data.frame(mydf[,1]))
  
  p <- plot_ly(x = 1:minpcax,y = varcumsum[1:minpcax],type = "bar") %>%
    layout(title = "主成分个数-累计方差贡献率",
           xaxis = list(title = "主成分"),
           yaxis = list(title = "累计方差贡献率"))
  
  res$e <- e
  res$mydf <- mydf
  res$myroot <- myroot
  res$myindex <- myindex
  res$p <- p
  res$il <- nrow(mydf)/minpcax
  return(res)
   
})

renderPlotly({selectpca()$p})


DT::renderDataTable(selectpca()$mydf,rownames = FALSE,options = list(pageLength = selectpca()$il))


```


### 3.2 说明
- "xx指数"的形成：其他指标的线性组合 -> PCA降维。
- 主成分是否有实际的经济意义？如何解释主成分？
- 基于主成分为特征的分类器





##4 股票时段-宏观经济数据分类器

```{r echo= FALSE}



```




##5 分析股票时段切换的前兆信号







